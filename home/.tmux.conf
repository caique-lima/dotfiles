source "/usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf"

# set window split
bind \ split-window -h
bind - split-window

bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"
set-option -g default-terminal "screen-256color" #set $TERM variable so programs know how to behave
set-option -g base-index 1 #start counting windows at 1 instead of 0 (for more logical keboard-switching)
set-option -g pane-base-index 1 #start counting panes at 1 instead of 0
set-option -g renumber-windows on #when a window is closed, renumber the remaining windows

set-option -gw xterm-keys on
bind-key -n C-PageUp send-keys C-PageUp
bind-key -n C-PageDown send-keys C-PageDown

# Remove ESC time wait
set -s escape-time 0

# Binding Shift+Arrows to switch between Panes
# bind -n S-Left select-pane -L
# bind -n S-Right select-pane -R
# bind -n S-Up select-pane -U
# bind -n S-Down select-pane -D

set -sg escape-time 0
set -sg repeat-time 300
# Smart pane switching with awareness of Vim splits.
# We are using Shift+Arrows to switch between Panes
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t'#{pane_tty}' \
   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n S-Left if-shell "$is_vim" "send-keys S-Left" "select-pane -L"
bind-key -n S-Right if-shell "$is_vim" "send-keys S-Right" "select-pane -R"
bind-key -n S-Up if-shell "$is_vim" "send-keys S-Up" "select-pane -U"
bind-key -n S-Down if-shell "$is_vim" "send-keys S-Down" "select-pane -D"
bind-key -n S-\ if-shell "$is_vim" "send-keys S-\\" "select-pane -l"
